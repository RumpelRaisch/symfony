{"version":3,"sources":["admin.user.index.es6"],"names":["$","$userList","document","getElementById","$info","find","$edit","$remove","$infoAreas","hide","attr","removeClass","on","e","preventDefault","$this","this","$infoArea","concat","data","not","show","id","swal","title","text","icon","buttons","cancel","value","visible","className","closeModal","confirm","then","fetch","results","json","debug","console","log","status","Error","$rows","remove","catch","err","elem","createElement","innerHTML","message","content","stopLoading","close"],"mappings":"AAAAA,EAAE,WAEE,IAAMC,EAAaD,EAAEE,SAASC,eAAe,aACvCC,EAAaH,EAAUI,KAAK,iCAC5BC,EAAaL,EAAUI,KAAK,6BAC5BE,EAAaN,EAAUI,KAAK,+BAC5BG,EAAaP,EAAUI,KAAK,wBAElCG,EACKC,OACAC,KAAK,mBAAoB,aACzBC,YAAY,UAEjBP,EAAMQ,GAAG,QAAS,SAAUC,GAExBA,EAAEC,iBAEF,IAAMC,EAAYf,EAAEgB,MACdC,EAAYjB,EAAEE,SAASC,eAAT,aAAAe,OAAqCH,EAAMI,KAAK,cAOpE,OALAX,EACKY,IAAIH,GACJR,OACAC,KAAK,mBAAoB,aAEtBO,EAAUP,KAAK,qBACnB,IAAK,YACDO,EACKI,OACAX,KAAK,mBAAoB,WAC9B,MAEJ,IAAK,UACDO,EACKR,OACAC,KAAK,mBAAoB,gBAK1CJ,EAAMM,GAAG,QAAS,SAAUC,GAExBA,EAAEC,mBAGNP,EAAQK,GAAG,QAAS,SAAUC,GAE1BA,EAAEC,iBAEF,IAAMC,EAAQf,EAAEgB,MACVM,EAAQP,EAAMI,KAAK,WAEzBI,KAAK,CACDC,MAAS,gBACTC,KAAI,iDAAAP,OAAsDI,EAAtD,KACJI,KAAS,UACTC,QAAS,CACLC,OAAS,CACLH,KAAY,SACZI,MAAY,KACZC,SAAY,EACZC,UAAY,GACZC,YAAY,GAEhBC,QAAS,CACLR,KAAY,KACZI,MAAYd,EAAML,KAAK,QACvBoB,SAAY,EACZC,UAAY,GACZC,YAAY,MAGrBE,KAAK,SAAAL,GAEJ,GAAI,OAASA,EACT,MAAM,KAGV,OAAOM,MAAMN,KACdK,KAAK,SAAAE,GAEJ,OAAOA,EAAQC,SAChBH,KAAK,SAAAG,GAMJ,GAJIA,EAAKC,OACLC,QAAQC,IAAI,QAASH,EAAKC,OAG1B,MAAQD,EAAKI,OAcb,MAAM,IAAIC,MAAJ,UAAAxB,OAAoBmB,EAAKI,OAAzB,OAAAvB,OAAqCmB,EAAKZ,OAbhD,IAAMkB,EAAQ1C,EAAUI,KAAV,oBAAAa,OAAmCI,EAAnC,OAEdqB,EAAMlC,KAAK,IAAK,WAEZkC,EAAMC,SAENrB,KAAK,CACDC,MAAO,QACPC,KAAI,oBAAAP,OAAuBI,EAAvB,gBACJI,KAAO,gBAMpBmB,MAAM,SAAAC,GAEL,GAAIA,EAAK,CACL,IAAMC,EAAO7C,SAAS8C,cAAc,QAEpCD,EAAKE,UAAL,iCAAA/B,OAAkD4B,EAAII,SAEtD3B,KAAK,CACDC,MAAS,WACT2B,QAASJ,EACTrB,KAAS,eAGbH,KAAK6B,cACL7B,KAAK8B","file":"admin.user.index.min.js","sourcesContent":["$(() =>\n{\n    const $userList  = $(document.getElementById('userList'));\n    const $info      = $userList.find('a[data-action=\"userShowInfo\"]');\n    const $edit      = $userList.find('a[data-action=\"userEdit\"]');\n    const $remove    = $userList.find('a[data-action=\"userRemove\"]');\n    const $infoAreas = $userList.find('tr[data-info-status]');\n\n    $infoAreas\n        .hide()\n        .attr('data-info-status', 'invisible')\n        .removeClass('d-none');\n\n    $info.on('click', function (e)\n    {\n        e.preventDefault();\n\n        const $this     = $(this);\n        const $infoArea = $(document.getElementById(`info_user_${$this.data('user-id')}`));\n\n        $infoAreas\n            .not($infoArea)\n            .hide()\n            .attr('data-info-status', 'invisible');\n\n        switch ($infoArea.attr('data-info-status')) {\n            case 'invisible':\n                $infoArea\n                    .show()\n                    .attr('data-info-status', 'visible');\n                break;\n\n            case 'visible':\n                $infoArea\n                    .hide()\n                    .attr('data-info-status', 'invisible');\n                break;\n        }\n    });\n\n    $edit.on('click', function (e)\n    {\n        e.preventDefault();\n    });\n\n    $remove.on('click', function (e)\n    {\n        e.preventDefault();\n\n        const $this = $(this);\n        const id    = $this.data('user-id');\n\n        swal({\n            title  : 'Are you sure?',\n            text   : `This will permanently delete the user with ID ${id}!`,\n            icon   : 'warning',\n            buttons: {\n                cancel : {\n                    text      : 'Cancel',\n                    value     : null,\n                    visible   : true,\n                    className : '',\n                    closeModal: true,\n                },\n                confirm: {\n                    text      : 'OK',\n                    value     : $this.attr('href'),\n                    visible   : true,\n                    className : '',\n                    closeModal: true\n                }\n            }\n        }).then(value =>\n        {\n            if (null === value) {\n                throw null;\n            }\n\n            return fetch(value);\n        }).then(results =>\n        {\n            return results.json();\n        }).then(json =>\n        {\n            if (json.debug) {\n                console.log('debug', json.debug);\n            }\n\n            if (200 === json.status) {\n                const $rows = $userList.find(`tr[data-user-id=\"${id}\"]`);\n\n                $rows.hide(500, () =>\n                {\n                    $rows.remove();\n\n                    swal({\n                        title: 'Done!',\n                        text : `The user with ID ${id} is history!`,\n                        icon : 'success'\n                    });\n                });\n            } else {\n                throw new Error(`Status ${json.status} - ${json.text}`);\n            }\n        }).catch(err =>\n        {\n            if (err) {\n                const elem = document.createElement('span');\n\n                elem.innerHTML = `The request returned with:<br>${err.message}`;\n\n                swal({\n                    title  : 'Oh noes!',\n                    content: elem,\n                    icon   : 'error'\n                });\n            } else {\n                swal.stopLoading();\n                swal.close();\n            }\n        });\n\n        // swal({\n        //     title  : 'Done!',\n        //     text   : `The user with ID \"${value}\" is history!`,\n        //     icon   : 'success'\n        // });\n    });\n});\n"]}